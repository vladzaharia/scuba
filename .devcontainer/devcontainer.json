// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
	"name": "Tracker Dev",
	"build": { "dockerfile": "Dockerfile" },

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/balazs23/devcontainers-features/nx:1": {},
		"ghcr.io/devcontainers-contrib/features/cloudflare-wrangler:1": {},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers-contrib/features/prettier:1": {},
		"ghcr.io/wxw-matt/devcontainer-features/apt:0": {
			"packages": "sudo"
		},
		"ghcr.io/wxw-matt/devcontainer-features/command_runner:0": {
			"command1": "curl -fsSL https://starship.rs/install.sh | sh -s -- -y"
		},
		"ghcr.io/eliises/devcontainer-features/bash-profile:1": {
			"command": "eval \"$(starship init bash)\""
		},
		"ghcr.io/jayree/devcontainer-features/npm-registry:1": {
			"registry": "@fortawesome:registry=https://npm.fontawesome.com/ //npm.fontawesome.com/:_authToken=${localEnv:FONTAWESOME_API_TOKEN}"
		}
	},

	"mounts": [
		// "source=${localEnv:HOME}${localEnv:USERPROFILE},target=/home/vlad,type=bind,consistency=cached",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.config,target=/home/vlad/.config,type=bind,consistency=cached",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.gitconfig,target=/home/vlad/.gitconfig,type=bind,consistency=cached",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/vlad/.ssh,type=bind,consistency=cached",
		"source=${localWorkspaceFolderBasename}-node_modules,target=${containerWorkspaceFolder}/node_modules,type=volume"
	],

	"containerEnv": {
		"CLOUDFLARE_API_TOKEN": "${localEnv:CLOUDFLARE_API_TOKEN}",
		"FONTAWESOME_API_TOKEN": "${localEnv:FONTAWESOME_API_TOKEN}"
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [4200, 8787],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "sudo chown -R vlad node_modules && npm install",
	"postStartCommand": "npm run build",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"remcohaszing.schemastore",
				"fabiospampinato.vscode-diff",
				"IronGeek.vscode-env",
				"tamasfe.even-better-toml",
				"github.vscode-github-actions",
				"GitHub.copilot",
				"GitHub.copilot-labs",
				"eamodio.gitlens",
				"yzhang.markdown-all-in-one",
				"42Crunch.vscode-openapi",
				"esbenp.prettier-vscode",
				"cipchk.cssrem",
				"redhat.vscode-yaml",
				"GitHub.vscode-pull-request-github",
				"humao.rest-client",
				"PROxZIMA.sweetdracula"
			],
			"settings": {
				"terminal.integrated.defaultProfile.linux": "bash",
				"workbench.colorTheme": "Sweet Dracula",
				"workbench.preferredDarkColorTheme": "Default Dark Modern",
				"diffEditor.ignoreTrimWhitespace": false,
				"git.enableSmartCommit": true,
				"git.autofetch": true,
				"git.confirmSync": false,
				"[typescript]": {
					"editor.defaultFormatter": "vscode.typescript-language-features"
				},
				"[typescriptreact]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[json]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[markdown]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
			    "files.associations": {
					"*.swagger": "yaml"
				}
			}
		}
	},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vlad"
}
