name: Test

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      FONTAWESOME_API_TOKEN:
        required: true
      CYPRESS_GARMIN_USERNAME:
        required: true
      CYPRESS_MAPBOX_API_TOKEN:
        required: true
      CYPRESS_OIDC_AUTHORITY:
        required: true
      CYPRESS_OIDC_CLIENT_ID:
        required: true
      CYPRESS_OIDC_SCOPE:
        required: true
      CYPRESS_OIDC_SECRET:
        required: true
      CYPRESS_TRACKER_API_TOKEN:
        required: true
      CYPRESS_RECORD_KEY:
        required: true
jobs:
  e2e:
    name: Test with Cypress (${{ inputs.environment }})
    runs-on: ubuntu-latest
    permissions: write-all
    concurrency: ${{ inputs.environment }}

    container:
      image: cypress/browsers:latest
      options: --user 1001

    steps:
    - name: Checkout files
      uses: actions/checkout@v3
    - name: Use Node.js v20.x
      uses: actions/setup-node@v3
      with:
        node-version: v20.x
    - name: Remove existing node_modules
      run: rm -rf **/node_modules
    - name: Install NPM packages
      run: npm ci
      env:
        FONTAWESOME_API_TOKEN: ${{ secrets.FONTAWESOME_API_TOKEN }}
    - name: Install cypress binaries
      run: npx cypress install
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: tracker-server/dist

    # - name: Run tracker-server Cypress tests
    #   uses: cypress-io/github-action@v6
    #   with:
    #     project: tracker-server
    #     spec: tracker-server/src/**/*.cy.ts
    #     start: npx nx run tracker-server:serve
    #     browser: electron
    #   env:
    #     CYPRESS_GARMIN_USERNAME: ${{ secrets.CYPRESS_GARMIN_USERNAME }}
    #     CYPRESS_MAPBOX_API_TOKEN: ${{ secrets.CYPRESS_MAPBOX_API_TOKEN }}
    #     CYPRESS_OIDC_AUTHORITY: ${{ secrets.CYPRESS_OIDC_AUTHORITY }}
    #     CYPRESS_OIDC_CLIENT_ID: ${{ secrets.CYPRESS_OIDC_CLIENT_ID }}
    #     CYPRESS_OIDC_SCOPE: ${{ secrets.CYPRESS_OIDC_SCOPE }}
    #     CYPRESS_OIDC_SECRET: ${{ secrets.CYPRESS_OIDC_SECRET }}
    #     CYPRESS_TRACKER_API_TOKEN: ${{ secrets.CYPRESS_TRACKER_API_TOKEN }}
    #     CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    - name: Run development server
      uses: JarvusInnovations/background-action@v1
      if:  ${{ inputs.environment == 'local' }}
      with:
        run: npm run serve &
        wait-on: |
          http-get://localhost:8787/api/
        tail: true
        log-output-resume: true
        wait-for: 5m
        log-output: true
        log-output-if: true

    - name: Run Cypress tests (${{ inputs.environment }})
      run: npx nx run-many -t test:cypress --configuration ${{ inputs.environment }}
      env:
        CYPRESS_GARMIN_USERNAME: ${{ secrets.CYPRESS_GARMIN_USERNAME }}
        CYPRESS_MAPBOX_API_TOKEN: ${{ secrets.CYPRESS_MAPBOX_API_TOKEN }}
        CYPRESS_OIDC_AUTHORITY: ${{ secrets.CYPRESS_OIDC_AUTHORITY }}
        CYPRESS_OIDC_CLIENT_ID: ${{ secrets.CYPRESS_OIDC_CLIENT_ID }}
        CYPRESS_OIDC_SCOPE: ${{ secrets.CYPRESS_OIDC_SCOPE }}
        CYPRESS_OIDC_SECRET: ${{ secrets.CYPRESS_OIDC_SECRET }}
        CYPRESS_TRACKER_API_TOKEN: ${{ secrets.CYPRESS_TRACKER_API_TOKEN }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e
        path: coverage/
        retention-days: 7
